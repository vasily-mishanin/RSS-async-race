{"ast":null,"code":"var _jsxFileName = \"/Users/vasmish/Coding/rollingScopesRSS/async-race/RSS-async-race/src/pages/Garage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport CarsList from '../components/CarsList';\nimport PaginationControls from '../components/PaginationControls';\nimport GarageControls from '../components/GarageControls';\nimport { carBrand, carModel } from '../model/carsData';\nimport { paginate } from '../utilites/helpers';\nimport * as api from '../api-fetch/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Garage = props => {\n  _s();\n\n  console.log('GARAGE');\n  const [cars, setCars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [updatingCar, setUpdatingCar] = useState(props.updatingCar);\n  const [pageNumber, setPageNumber] = useState(props.page);\n  const [isRaceStarted, setIsRaceStarted] = useState(false);\n  const [isRaceEnded, setIsRaceEnded] = useState(false);\n  const CARS_PER_PAGE = 7;\n  const book = paginate(cars, CARS_PER_PAGE);\n  console.log(book);\n  const numberOfPages = book.length;\n  const currentPage = book[pageNumber - 1]; //let stoppedCars = 0;\n\n  useEffect(() => {\n    console.log('USE EFFECT');\n    setIsLoading(true); // getCars\n\n    fetch('http://127.0.0.1:3000/garage').then(res => res.json()).then(res => {\n      console.log(res);\n      setCars(() => res);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const createCarHandler = (name, color) => {\n    api.createCar(name, color).then(res => res.json()).then(res => {\n      console.log(res);\n      setCars(prevCars => [...prevCars, res]);\n    });\n  };\n\n  const removeCarHandler = id => {\n    api.deleteCar(id).then(res => {\n      console.log(res.status);\n\n      if (res.status === 200) {\n        setCars(prevCars => prevCars.filter(car => car.id !== id));\n        api.deleteWinner(id);\n      }\n\n      return res.json();\n    }).then(res => {\n      console.log('DELETE', id, res.statusCode);\n    });\n  };\n\n  const selectCarHandler = car => {\n    console.log('SELECT', car);\n    console.log(car);\n    props.handleUpdatingCarChange(car);\n    setUpdatingCar(car);\n  };\n\n  const updateCarHandler = car => {\n    api.updateCar(car).then(res => {\n      return res.json();\n    }).then(res => {\n      let carIndex = cars.findIndex(car => car.id === res.id);\n      let updatingCar = cars[carIndex];\n      updatingCar = { ...res\n      };\n      const newCars = [...cars];\n      newCars[carIndex] = updatingCar;\n      setCars(newCars);\n      setUpdatingCar({\n        id: -1,\n        name: '',\n        color: '#000000'\n      });\n    });\n  };\n\n  const generateCarsHandler = () => {\n    const getRandomInRange = (from, to) => Math.floor(from + Math.random() * (to - from + 1));\n\n    const NUMBERS_OF_CARS = 100;\n    const NUMBER_OF_COLOR_COMBINATIONS = 16777215;\n    const generatedCars = [];\n\n    for (let i = 0; i < NUMBERS_OF_CARS; i++) {\n      const name = `${carBrand[getRandomInRange(0, carBrand.length)]} ${carModel[getRandomInRange(0, carModel.length)]}`;\n      const color = '#' + Math.floor(Math.random() * NUMBER_OF_COLOR_COMBINATIONS).toString(16);\n      generatedCars.push({\n        name,\n        color\n      });\n    }\n\n    Promise.all(generatedCars.map(car => api.createCar(car.name, car.color).then(res => res.json()))).then(responses => {\n      console.log(responses);\n      setCars(prevCars => [...prevCars, ...responses]);\n    });\n  };\n\n  const handleNext = () => {\n    if (pageNumber < book.length) {\n      props.handleLastPage(pageNumber + 1);\n      setPageNumber(prevPageNumber => prevPageNumber + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (pageNumber > 1) {\n      props.handleLastPage(pageNumber - 1);\n      setPageNumber(prevPageNumber => prevPageNumber - 1);\n    }\n  };\n\n  const startRaceHandler = () => {\n    setIsRaceStarted(true);\n  };\n\n  const resetRaceHandler = () => {\n    setIsRaceStarted(false);\n    setIsRaceEnded(false);\n  };\n\n  const raceEndHandler = () => {\n    setIsRaceEnded(true);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(GarageControls, {\n      updatingCar: updatingCar,\n      createCarHandler: createCarHandler,\n      updateCarHandler: updateCarHandler,\n      onGenerateCars: generateCarsHandler,\n      onUpdatingControlsChange: props.handleUpdatingCarChange,\n      onStartRace: startRaceHandler,\n      onResetRace: resetRaceHandler,\n      isRaceEnded: isRaceEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Garage: \", cars.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Page: \", pageNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CarsList, {\n      items: currentPage,\n      isRaceStarted: isRaceStarted,\n      removeCarHandler: removeCarHandler,\n      selectCarHandler: selectCarHandler,\n      signalRaceEnded: raceEndHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationControls, {\n      numberOfPages: numberOfPages,\n      currentPageNumber: pageNumber,\n      onNext: handleNext,\n      onPrev: handlePrev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Garage, \"4BZMzJ8gEPyIsaYFebwZn5nDS+I=\");\n\n_c = Garage;\nexport default Garage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Garage\");","map":{"version":3,"names":["useEffect","useState","CarsList","PaginationControls","GarageControls","carBrand","carModel","paginate","api","Garage","props","console","log","cars","setCars","isLoading","setIsLoading","updatingCar","setUpdatingCar","pageNumber","setPageNumber","page","isRaceStarted","setIsRaceStarted","isRaceEnded","setIsRaceEnded","CARS_PER_PAGE","book","numberOfPages","length","currentPage","fetch","then","res","json","createCarHandler","name","color","createCar","prevCars","removeCarHandler","id","deleteCar","status","filter","car","deleteWinner","statusCode","selectCarHandler","handleUpdatingCarChange","updateCarHandler","updateCar","carIndex","findIndex","newCars","generateCarsHandler","getRandomInRange","from","to","Math","floor","random","NUMBERS_OF_CARS","NUMBER_OF_COLOR_COMBINATIONS","generatedCars","i","toString","push","Promise","all","map","responses","handleNext","handleLastPage","prevPageNumber","handlePrev","startRaceHandler","resetRaceHandler","raceEndHandler"],"sources":["/Users/vasmish/Coding/rollingScopesRSS/async-race/RSS-async-race/src/pages/Garage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport CarsList from '../components/CarsList';\nimport PaginationControls from '../components/PaginationControls';\nimport GarageControls from '../components/GarageControls';\nimport Car from '../model/Car';\nimport { carBrand, carModel } from '../model/carsData';\nimport { paginate } from '../utilites/helpers';\nimport * as api from '../api-fetch/requests';\n\ntype TGarageProps = {\n  page: number;\n  updatingCar: Car;\n  handleLastPage: (pageNumber: number) => void;\n  handleUpdatingCarChange: (car: Car) => void;\n};\n\nconst Garage: React.FC<TGarageProps> = (props) => {\n  console.log('GARAGE');\n  const [cars, setCars] = useState<Car[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [updatingCar, setUpdatingCar] = useState<Car>(props.updatingCar);\n  const [pageNumber, setPageNumber] = useState<number>(props.page);\n  const [isRaceStarted, setIsRaceStarted] = useState(false);\n  const [isRaceEnded, setIsRaceEnded] = useState(false);\n\n  const CARS_PER_PAGE = 7;\n  const book = paginate<Car>(cars, CARS_PER_PAGE);\n  console.log(book);\n  const numberOfPages = book.length;\n  const currentPage = book[pageNumber - 1];\n  //let stoppedCars = 0;\n\n  useEffect(() => {\n    console.log('USE EFFECT');\n    setIsLoading(true);\n    // getCars\n    fetch('http://127.0.0.1:3000/garage')\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setCars(() => res);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const createCarHandler = (name: string, color: string) => {\n    api\n      .createCar(name, color)\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setCars((prevCars) => [...prevCars, res]);\n      });\n  };\n\n  const removeCarHandler = (id: number) => {\n    api\n      .deleteCar(id)\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 200) {\n          setCars((prevCars) => prevCars.filter((car) => car.id !== id));\n          api.deleteWinner(id);\n        }\n        return res.json();\n      })\n      .then((res) => {\n        console.log('DELETE', id, res.statusCode);\n      });\n  };\n\n  const selectCarHandler = (car: Car) => {\n    console.log('SELECT', car);\n    console.log(car);\n    props.handleUpdatingCarChange(car);\n    setUpdatingCar(car);\n  };\n\n  const updateCarHandler = (car: Car) => {\n    api\n      .updateCar(car)\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        let carIndex = cars.findIndex((car) => car.id === res.id);\n        let updatingCar = cars[carIndex];\n        updatingCar = { ...res };\n        const newCars = [...cars];\n        newCars[carIndex] = updatingCar;\n        setCars(newCars);\n        setUpdatingCar({ id: -1, name: '', color: '#000000' });\n      });\n  };\n\n  const generateCarsHandler = () => {\n    const getRandomInRange = (from: number, to: number) => Math.floor(from + Math.random() * (to - from + 1));\n    const NUMBERS_OF_CARS = 100;\n    const NUMBER_OF_COLOR_COMBINATIONS = 16777215;\n    const generatedCars: { name: string; color: string }[] = [];\n    for (let i = 0; i < NUMBERS_OF_CARS; i++) {\n      const name = `${carBrand[getRandomInRange(0, carBrand.length)]} ${carModel[getRandomInRange(0, carModel.length)]}`;\n      const color = '#' + Math.floor(Math.random() * NUMBER_OF_COLOR_COMBINATIONS).toString(16);\n      generatedCars.push({ name, color });\n    }\n    Promise.all(generatedCars.map((car) => api.createCar(car.name, car.color).then((res) => res.json()))).then(\n      (responses: Car[]) => {\n        console.log(responses);\n        setCars((prevCars) => [...prevCars, ...responses]);\n      }\n    );\n  };\n\n  const handleNext = () => {\n    if (pageNumber < book.length) {\n      props.handleLastPage(pageNumber + 1);\n      setPageNumber((prevPageNumber) => prevPageNumber + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (pageNumber > 1) {\n      props.handleLastPage(pageNumber - 1);\n      setPageNumber((prevPageNumber) => prevPageNumber - 1);\n    }\n  };\n\n  const startRaceHandler = () => {\n    setIsRaceStarted(true);\n  };\n\n  const resetRaceHandler = () => {\n    setIsRaceStarted(false);\n    setIsRaceEnded(false);\n  };\n\n  const raceEndHandler = () => {\n    setIsRaceEnded(true);\n  };\n\n  if (isLoading) {\n    return (\n      <section>\n        <p>Loading ...</p>\n      </section>\n    );\n  }\n\n  return (\n    <section>\n      <GarageControls\n        updatingCar={updatingCar}\n        createCarHandler={createCarHandler}\n        updateCarHandler={updateCarHandler}\n        onGenerateCars={generateCarsHandler}\n        onUpdatingControlsChange={props.handleUpdatingCarChange}\n        onStartRace={startRaceHandler}\n        onResetRace={resetRaceHandler}\n        isRaceEnded={isRaceEnded}\n      />\n      <h2>Garage: {cars.length}</h2>\n      <h3>Page: {pageNumber}</h3>\n      <CarsList\n        items={currentPage}\n        isRaceStarted={isRaceStarted}\n        removeCarHandler={removeCarHandler}\n        selectCarHandler={selectCarHandler}\n        signalRaceEnded={raceEndHandler}\n      />\n      <PaginationControls numberOfPages={numberOfPages} currentPageNumber={pageNumber} onNext={handleNext} onPrev={handlePrev} />\n    </section>\n  );\n};\n\nexport default Garage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}