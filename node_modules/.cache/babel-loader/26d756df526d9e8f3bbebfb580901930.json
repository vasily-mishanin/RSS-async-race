{"ast":null,"code":"var _jsxFileName = \"/Users/vasmish/Coding/rollingScopesRSS/async-race/RSS-async-race/src/pages/Winners.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport WinnersTable from '../components/WinnersTable';\nimport PaginationControls from '../components/PaginationControls';\nimport * as api from '../api-fetch/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Winners = props => {\n  _s();\n\n  console.log('Winners');\n  const [isLoading, setIsLoading] = useState(false);\n  const [winners, setWinners] = useState([]);\n  const [cars, setCars] = useState([]);\n  const [totalWinners, setTotalWinners] = useState(0);\n  const [sortConfig, setSortConfig] = useState(null);\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const LIMIT = 10;\n  const numberOfPages = totalWinners / LIMIT;\n  useEffect(() => {\n    setIsLoading(true); // winners --> setState -> cars -> setState\n\n    console.log('useEffect - Winners');\n    api.getWinners(currentPageNumber, LIMIT, sortConfig === null || sortConfig === void 0 ? void 0 : sortConfig.key, sortConfig === null || sortConfig === void 0 ? void 0 : sortConfig.order).then(res => {\n      setTotalWinners(Number(res.headers.get('X-Total-Count')));\n      return res.json();\n    }).then(winners => {\n      setWinners(winners);\n      const ids = winners.map(w => w.id);\n      const getCarsForWinners = ids.map(id => api.getCar(id));\n      Promise.all(getCarsForWinners).then(resArr => resArr.map(res => res.json())).then(carsPromises => {\n        Promise.all(carsPromises).then(cars => {\n          //console.log('CARS', cars);\n          setCars(cars);\n        });\n      }); //console.log(winners);\n    }).then(() => {\n      setIsLoading(false);\n    });\n    return () => {};\n  }, [currentPageNumber, sortConfig]);\n\n  const handleNext = () => {\n    if (currentPageNumber < numberOfPages) {\n      setCurrentPageNumber(currentPageNumber => currentPageNumber + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentPageNumber > 0) {\n      setCurrentPageNumber(currentPageNumber => currentPageNumber - 1);\n    }\n  };\n\n  const requestSort = key => {\n    let order = 'ASC';\n\n    if ((sortConfig === null || sortConfig === void 0 ? void 0 : sortConfig.key) === key && (sortConfig === null || sortConfig === void 0 ? void 0 : sortConfig.order) === 'ASC') {\n      order = 'DESC';\n    }\n\n    setSortConfig({\n      key,\n      order\n    }); //props.requestSort\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  } // console.log(winners, cars);\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Winners\", ` (${totalWinners})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Page: \", currentPageNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WinnersTable, {\n      winners: winners,\n      cars: cars,\n      sortConfig: sortConfig,\n      requestSort: requestSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationControls, {\n      numberOfPages: numberOfPages,\n      currentPageNumber: currentPageNumber,\n      onNext: handleNext,\n      onPrev: handlePrev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Winners, \"9E6YdE1QUFkQKxuCEvR5QtMLB3I=\");\n\n_c = Winners;\nexport default Winners;\n\nvar _c;\n\n$RefreshReg$(_c, \"Winners\");","map":{"version":3,"names":["React","useEffect","useState","WinnersTable","PaginationControls","api","Winners","props","console","log","isLoading","setIsLoading","winners","setWinners","cars","setCars","totalWinners","setTotalWinners","sortConfig","setSortConfig","currentPageNumber","setCurrentPageNumber","LIMIT","numberOfPages","getWinners","key","order","then","res","Number","headers","get","json","ids","map","w","id","getCarsForWinners","getCar","Promise","all","resArr","carsPromises","handleNext","handlePrev","requestSort"],"sources":["/Users/vasmish/Coding/rollingScopesRSS/async-race/RSS-async-race/src/pages/Winners.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Car, { Winner } from '../model/Car';\nimport WinnersTable from '../components/WinnersTable';\nimport PaginationControls from '../components/PaginationControls';\nimport * as api from '../api-fetch/requests';\n\ntype TSortConfig = {\n  key: 'id' | 'wins' | 'time';\n  order: 'ASC' | 'DESC';\n} | null;\n\nconst Winners: React.FC = (props) => {\n  console.log('Winners');\n  const [isLoading, setIsLoading] = useState(false);\n  const [winners, setWinners] = useState<Winner[]>([]);\n  const [cars, setCars] = useState<Car[]>([]);\n  const [totalWinners, setTotalWinners] = useState(0);\n  const [sortConfig, setSortConfig] = useState<TSortConfig>(null);\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const LIMIT = 10;\n  const numberOfPages = totalWinners / LIMIT;\n\n  useEffect(() => {\n    setIsLoading(true);\n    // winners --> setState -> cars -> setState\n    console.log('useEffect - Winners');\n    api\n      .getWinners(currentPageNumber, LIMIT, sortConfig?.key, sortConfig?.order)\n      .then((res) => {\n        setTotalWinners(Number(res.headers.get('X-Total-Count')));\n        return res.json();\n      })\n      .then((winners) => {\n        setWinners(winners);\n        const ids: number[] = winners.map((w: Winner) => w.id);\n        const getCarsForWinners = ids.map((id) => api.getCar(id));\n        Promise.all(getCarsForWinners)\n          .then((resArr) => resArr.map((res) => res.json()))\n          .then((carsPromises) => {\n            Promise.all<Promise<Car>[]>(carsPromises).then((cars) => {\n              //console.log('CARS', cars);\n              setCars(cars);\n            });\n          });\n\n        //console.log(winners);\n      })\n      .then(() => {\n        setIsLoading(false);\n      });\n\n    return () => {};\n  }, [currentPageNumber, sortConfig]);\n\n  const handleNext = () => {\n    if (currentPageNumber < numberOfPages) {\n      setCurrentPageNumber((currentPageNumber) => currentPageNumber + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentPageNumber > 0) {\n      setCurrentPageNumber((currentPageNumber) => currentPageNumber - 1);\n    }\n  };\n\n  const requestSort = (key: 'id' | 'wins' | 'time') => {\n    let order: 'ASC' | 'DESC' = 'ASC';\n    if (sortConfig?.key === key && sortConfig?.order === 'ASC') {\n      order = 'DESC';\n    }\n    setSortConfig({ key, order });\n    //props.requestSort\n  };\n\n  if (isLoading) {\n    return (\n      <section>\n        <p>Loading ...</p>\n      </section>\n    );\n  }\n\n  // console.log(winners, cars);\n\n  return (\n    <section>\n      <h2>Winners{` (${totalWinners})`}</h2>\n      <h3>Page: {currentPageNumber}</h3>\n      <WinnersTable winners={winners} cars={cars} sortConfig={sortConfig} requestSort={requestSort} />\n      <PaginationControls\n        numberOfPages={numberOfPages}\n        currentPageNumber={currentPageNumber}\n        onNext={handleNext}\n        onPrev={handlePrev}\n      />\n    </section>\n  );\n};\n\nexport default Winners;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}